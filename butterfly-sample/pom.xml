<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>butterfly</artifactId>
        <groupId>com.github.simonalong</groupId>
        <version>1.0.8</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>butterfly-sample</artifactId>
    <version>1.0.8</version>

    <properties>
        <maven.deploy.skip>true</maven.deploy.skip>
        <junit.version>4.13.1</junit.version>
        <slf4j.version>1.7.28</slf4j.version>
        <logback.version>1.2.10</logback.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.0</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.github.simonalong</groupId>
            <artifactId>butterfly-allocator-zookeeper</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.simonalong</groupId>
            <artifactId>butterfly-allocator-db</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.simonalong</groupId>
            <artifactId>butterfly-allocator-distribute</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <version>2.7.3</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-access</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <!--如果使用dubbo，则请添加如下 dubbo-->
        <dependency>
            <groupId>org.apache.dubbo</groupId>
            <artifactId>dubbo</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.dubbo</groupId>
            <artifactId>dubbo-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-framework</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>zookeeper</artifactId>
                    <groupId>org.apache.zookeeper</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-recipes</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.28.0</version>
                <configuration>
                    <images>
                        <image>
                            <!-- 使用mysql:8 docker image -->
                            <name>mysql:8</name>
                            <!-- 定义docker run mysql:8 时的参数 -->
                            <run>
                                <ports>
                                    <!-- host port到container port的映射
                                    这里随机选择一个host port，并将值存到property docker-mysql.port里 -->
                                    <port>3306:3306</port>
                                </ports>
                                <!-- 启动时给的环境变量，参阅文档：https://hub.docker.com/_/mysql -->
                                <env>
                                    <MYSQL_ROOT_PASSWORD>123456</MYSQL_ROOT_PASSWORD>
                                    <MYSQL_DATABASE>neo</MYSQL_DATABASE>
                                    <MYSQL_USER>neo_test</MYSQL_USER>
                                    <MYSQL_PASSWORD>neo@Test123</MYSQL_PASSWORD>
                                </env>
                                <!-- 设置判定container启动成功的的条件及timeout -->
                                <wait>
                                    <!-- 如果container打出了这行日志，则说明容器启动成功 -->
                                    <log>MySQL init process done. Ready for start up.</log>
                                    <time>120000</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
